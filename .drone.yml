clone:
    path: github.com/vmware/docker-volume-vsphere
    tags: true

build:

  serialize_branches:
    image: &build_cnt cnastorage/vibauthor-and-go:0.12
    environment: &setup_env
      - DRONE_TOKEN=$$DRONE_TOKEN
      - DRONE_SERVER=$$DRONE_SERVER
      - GOVC_USERNAME=$$CI_BASE_VMWARE_ESX_USER
      - GOVC_PASSWORD=$$CI_BASE_VMWARE_ESX_PASS
      - GOVC_USERNAME_ESX=$$CI_VMWARE_ESX_USER
      - GOVC_PASSWORD_ESX=$$CI_VMWARE_ESX_PASS
      - GOVC_INSECURE=1
      - GOVC_URL=$$CI_BASE_ESX_IP
      - TEST_URL_ARRAY=$$CI_ESX_IP_6_0
      - ESX_6_0=$$CI_ESX_NAME_6_0
      - ESX_6_5=$$CI_ESX_NAME_6_5
      - GOVC_URL_6_0=$$CI_ESX_IP_6_0
      - GOVC_URL_6_5=$$CI_ESX_IP_6_5
      - SSH_KEY_OPT=-i /drone/src/github.com/vmware/docker-volume-vsphere/key
      - GOVC_GET_IP=govc vm.ip -a -v4
      - KEY=$$KEY
      - DOCKER_HUB_REPO=cnastorage
      - VERSION_TAG=latest
      - EXTRA_TAG=-CI
      - ESX_6_0=$$CI_ESX_NAME_6_0
      - ESX_6_5=$$CI_ESX_NAME_6_5
    commands: &serialize_cmd
      - misc/drone-scripts/validate-and-serialize.sh
    when: &branches
      event: [push]
      branch: [master, runci/*]

  serialize_events:
    image: *build_cnt
    environment: *setup_env
    commands: *serialize_cmd
    when: &events
      event: [pull_request, tag]

  build_branches:
    image: *build_cnt
    environment: *setup_env
    commands: &build_cmd
      - if [ "$TAG" != "" ]; then export PKG_VERSION=$TAG; fi
      - go get github.com/golang/lint/golint
      - go get -u gopkg.in/check.v1
      - make -s build
      - echo $KEY | base64 -d > /drone/src/github.com/vmware/docker-volume-vsphere/key
      - chmod 0600 /drone/src/github.com/vmware/docker-volume-vsphere/key
    when: *branches

  build_events:
    image: *build_cnt
    environment: *setup_env
    commands: *build_cmd
    when: *events

  pylint_branches:
    image: &pylint_cnt cnastorage/pylint
    commands: &pylint_cmd
       - make -s pylint
    when: *branches

  pylint_events:
    image: *pylint_cnt
    commands: *pylint_cmd
    when: *events

  package_branches:
    image: &package_cnt cnastorage/fpm
    commands: &package_cmd
      - if [ "$TAG" != "" ]; then export PKG_VERSION=$TAG; fi
      - make -s deb rpm
    when: *branches

  package_events:
    image: *package_cnt
    commands: *package_cmd
    when: *events

  setup_events:
    image: *build_cnt
    environment: *setup_env
    commands: &setup_cmd
      - misc/drone-scripts/setup.sh
    when: *events

  setup_branches:
    image: *build_cnt
    environment: *setup_env
    commands: *setup_cmd
    when: *branches

  test_branches:
    image: *build_cnt
    privileged: true
    environment: *setup_env
    commands: &test_cmd
      - GOVC_USERNAME=$GOVC_USERNAME_ESX
      - GOVC_PASSWORD=$GOVC_PASSWORD_ESX
      - if [ "$TAG" != "" ]; then export PKG_VERSION=$TAG; fi
      - #
      - echo "=> Build and push vDVS managed plugin" `date` > /dev/null
      - #
      - export GOVC_URL=$GOVC_URL_6_5
      - export VM1=`$GOVC_GET_IP photon.vmfs`
      - export VM2=`$GOVC_GET_IP Ubuntu.16.10`
      - #
      - export MANAGER1=$VM1
      - export WORKER1=$VM2
      - export WORKER2=`$GOVC_GET_IP Ubuntu.14.04`
      - #
      - export CI_NODE4=`$GOVC_GET_IP photon.vsan`
      - #
      - ./misc/drone-scripts/deploy-and-test-wrapper.sh pluginSanityCheck $GOVC_URL_6_5 $VM1 $VM2 $$BUILD_NUMBER installbuilds < /dev/null
      - #
    when: *branches

  test_events:
    image: *build_cnt
    privileged: true
    environment: *setup_env
    commands: *test_cmd
    when: *events

matrix:
  GO_VERSION:
    - 1.6

publish:
  github_release:
    api_key: $$GITHUB_TOKEN
    files:
      - build/*.deb
      - build/*.rpm
      - build/*.vib
      - build/*.zip
    when:
      event: tag
